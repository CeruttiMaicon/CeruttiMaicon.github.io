{"remainingRequest":"/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/face-digital/Documents/project-ceruttimaicon.github.io/docs/linux-mint-tema-mac/README.md?vue&type=template&id=aa7a8fba&","dependencies":[{"path":"/home/face-digital/Documents/project-ceruttimaicon.github.io/docs/linux-mint-tema-mac/README.md","mtime":1574249865368},{"path":"/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1574163140185},{"path":"/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1574163140697},{"path":"/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1574163140185},{"path":"/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/vue-loader/lib/index.js","mtime":1574163140697},{"path":"/home/face-digital/Documents/project-ceruttimaicon.github.io/node_modules/@vuepress/markdown-loader/index.js","mtime":1574163140105}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}