(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{228:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"sonarqube-utilizacao-rapida"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sonarqube-utilizacao-rapida"}},[e._v("#")]),e._v(" Sonarqube - Utilização Rápida")]),e._v(" "),a("h2",{attrs:{id:"instalacao-projeto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instalacao-projeto"}},[e._v("#")]),e._v(" Instalação projeto")]),e._v(" "),a("h3",{attrs:{id:"requerimentos-tecnicos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requerimentos-tecnicos"}},[e._v("#")]),e._v(" Requerimentos técnicos")]),e._v(" "),a("p",[e._v("Docker - "),a("a",{attrs:{href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.docker.com/get-started"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Git - "),a("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://git-scm.com/downloads"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"passos-rapidos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#passos-rapidos"}},[e._v("#")]),e._v(" Passos rápidos")]),e._v(" "),a("ol",[a("li",[e._v("Rode este comando para baixar e executar o Sonarqube 7.5 Community.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -d --name sonarqube -p 9000:9000 sonarqube:7.5-community\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[e._v("Baixe o projeto para scanner de código: "),a("a",{attrs:{href:"https://github.com/CeruttiMaicon/SonarQube-7.5-Community-Docker-Implementation",target:"_blank",rel:"noopener noreferrer"}},[e._v("SonarQube-7.5-Community-Docker-Implementation"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[e._v("Dentro deste projeto na pasta raiz baixe os projetos que deseja fazer a analise de código.")])]),e._v(" "),a("li",[a("p",[e._v("Aguarde o servidor iniciar e efetue login no servidor SonarQube em "),a("a",{attrs:{href:"http://localhost:9000",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:9000"),a("OutboundLink")],1),e._v(" Utilize credenciais padrão: login: admin password:admin")])]),e._v(" "),a("li",[a("p",[e._v("Acesse: "),a("a",{attrs:{href:"http://localhost:9000/account/security",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:9000/account/security"),a("OutboundLink")],1),e._v(" e gere um token.")])])]),e._v(" "),a("blockquote",[a("p",[e._v("Copie o valor do token e salve-o em algum lugar, pois você não poderá vê-lo novamente! Você precisará mais tarde neste tutorial.")])]),e._v(" "),a("p",[e._v("Ainda dentro da pasta que acabamos de criar executaremos o seguinte comando:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('docker build --network=host --tag sonar-scanner-image:latest --build-arg SONAR_HOST="http://localhost:9000" --build-arg SONAR_LOGIN_TOKEN="TOKEN_VALUE" .\n')])])]),a("p",[e._v('Lembre-se de substituir "TOKEN_VALUE" pelo seu token criado na etapa 4.')]),e._v(" "),a("p",[e._v("Pronto!")]),e._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[e._v("Para cada projeto entre no diretório raiz e adicione estes dois arquivos:")])]),e._v(" "),a("blockquote",[a("p",[e._v("OBS: (caso os arquivos já existam os substitua).")])]),e._v(" "),a("blockquote",[a("p",[e._v("SONAR_PROJECT_KEY = Nome do projeto Scanneado")])]),e._v(" "),a("p",[a("strong",[e._v("SonarQube-7.5-Community-Docker-Implementation/project-name/Dockerfile")])]),e._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# It is our freshly build sonar-scanner-image from previous steps that")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# is used here as a base image in docker file that we will be working on")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" sonar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("scanner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("latest AS sonarqube_scan\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Here we are setting up a working directory to /app. It is like using `cd app` command")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WORKDIR")]),e._v(" /app\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Copying all files from the project directory to our current location (/app) in image")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# except patterns mention in .dockerignore")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COPY")]),e._v(" . .\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Execution of example command. Here it is used to show a list of files and directories.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# It will be useful in later exercises in this tutorial.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("RUN")]),e._v(" ls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("list\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# To execute sonar-scanner we just need to run ")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sonar-scanner"')]),e._v(" in the image.\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# To pass Sonarqube parameter we need to add ")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-D"')]),e._v("prefix to each as in the example below\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sonar.host.url is property used to define URL of Sonarqube server")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sonar.projectKey is used to define project key that will be used to distinguish it in")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sonarqube server from other projects")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sonar.sources directory for sources of project")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("RUN")]),e._v(" sonar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("scanner \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("Dsonar.host.url="),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://localhost:9000"')]),e._v(" \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("Dsonar.projectKey="),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SONAR_PROJECT_KEY"')]),e._v(" \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("Dsonar.sources=. \\\n\n")])])]),a("p",[a("strong",[e._v("SonarQube-7.5-Community-Docker-Implementation/project-name/.dockerignore")])]),e._v(" "),a("blockquote",[a("p",[e._v("Adicione mais diretórios que deseje que o scanner ignore.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".dockerignore\n.vs\nnode_modules\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[e._v("Agora, ainda dentro do diretório do projeto execute:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker build --network=host --no-cache .\n")])])]),a("p",[e._v("Após o termino do scanner. Ao entrar em "),a("a",{attrs:{href:"http://localhost:9000/projects",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:9000/projects"),a("OutboundLink")],1),e._v(" você verá o seu projeto.")])])}),[],!1,null,null,null);t.default=r.exports}}]);