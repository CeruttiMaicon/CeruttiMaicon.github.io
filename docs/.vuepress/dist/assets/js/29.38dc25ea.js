(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{229:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sonarqube"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sonarqube"}},[t._v("#")]),t._v(" Sonarqube")]),t._v(" "),a("h2",{attrs:{id:"instalacao-projeto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instalacao-projeto"}},[t._v("#")]),t._v(" Instalação projeto")]),t._v(" "),a("h3",{attrs:{id:"requerimentos-tecnicos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requerimentos-tecnicos"}},[t._v("#")]),t._v(" Requerimentos técnicos")]),t._v(" "),a("p",[t._v("Docker - "),a("a",{attrs:{href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.docker.com/get-started"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Git - "),a("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/downloads"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"primeiros-passos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#primeiros-passos"}},[t._v("#")]),t._v(" Primeiros passos")]),t._v(" "),a("p",[t._v("Configuração SonarQube")]),t._v(" "),a("ol",[a("li",[t._v("Execute o servidor SonarQube")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker run -d --name sonarqube -p 9000:9000 sonarqube:7.5-community\n")])])]),a("p",[t._v("O projeto Sonarquebe deve estar iniciando.")]),t._v(" "),a("p",[t._v("Entre em "),a("a",{attrs:{href:"http://localhost:9000",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9000"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Execute e verifique se um servidor está instalado e executando:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker ps\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("Aguarde o servidor iniciar e efetue login no servidor SonarQube em "),a("a",{attrs:{href:"http://localhost:9000",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9000"),a("OutboundLink")],1),t._v(" Utilize credenciais padrão: login: admin password:admin")])]),t._v(" "),a("li",[a("p",[t._v("Acesse: "),a("a",{attrs:{href:"http://localhost:9000/account/security",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9000/account/security"),a("OutboundLink")],1),t._v(" e gere um token.")])]),t._v(" "),a("li",[a("p",[t._v("Copie o valor do token e salve-o em algum lugar, pois você não poderá vê-lo novamente! Você precisará mais tarde neste tutorial.")])]),t._v(" "),a("li",[a("p",[t._v("Crie uma nova pasta para a imagem do Scanner SonarQube dockerfile.")])])]),t._v(" "),a("p",[t._v("Está pasta será responsável para executar os scanners de código dos projetos que você precisar.")]),t._v(" "),a("p",[t._v("Execute:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mkdir sonarqube-scanner\n")])])]),a("p",[t._v("Agora entraremos na pasta para criar os arquivos docker.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd sonarqube-scanner\n")])])]),a("p",[t._v("Criaremos o Dockerfile.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("touch Dockerfile\n")])])]),a("p",[t._v("Agora edite este arquivo com estas informações:")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is docker file for our sonarqube-scanner. You don't need to read it since")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the goal of this tutorial isn't about teaching docker or about presenting the best")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# way for creating Sonarqube scanner image. Of course feel free to check on it if you like.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get dotnetcore SDK")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" microsoft/dotnet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2.2.104"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sdk AS sonarqube\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install OpenJDK-8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update && \\\n    apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y openjdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jdk && \\\n    apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y ant && \\\n    apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get clean;\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fix certificate issues")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update && \\\n    apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("certificates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("java && \\\n    apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get clean && \\\n    update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("certificates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f;\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Setup JAVA_HOME")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_HOME /usr/lib/jvm/java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("openjdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("amd64/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" export JAVA_HOM\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Env variables")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_VERSION 10.13.0\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_DOWNLOAD_SHA b4b5d8f73148dcf277df413bb16827be476f4fa117cbbec2aaabc8cc0a8588e1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install node.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" curl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("SL "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("output nodejs.tar.gz \\\n    && echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$NODE_DOWNLOAD_SHA nodejs.tar.gz"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" sha256sum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" \\\n    && tar "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("xzf "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nodejs.tar.gz"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("C /usr/local "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("components=1 \\\n    && rm nodejs.tar.gz \\\n    && ln "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("s /usr/local/bin/node /usr/local/bin/nodejs\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install global tools")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet tool install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("g dotnetsay\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet tool install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("global dotnet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sonarscanner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("version 4.5.0\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add global tools folder to PATH")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PATH="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${PATH}:/root/.dotnet/tools"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get required packages for sonar scanner")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y install curl bash unzip yarn bzip2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /root\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" LATEST="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sonar-scanner-cli-3.3.0.1492-linux.zip'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get & install sonar scanner")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("env")]),t._v(" && \\\n    curl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("OL "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/'")]),t._v("$LATEST && \\\n    mkdir sonar_scanner && unzip "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d sonar_scanner $LATEST && mv sonar_scanner/* sonar_home && \\\n    rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf sonar_scanner $LATEST\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add sonar scanner to PATH")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" SONAR_RUNNER_HOME=/root/sonar_home\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PATH $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("SONAR_RUNNER_HOME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$PATH\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ARG")]),t._v(" SONAR_HOST\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ARG")]),t._v(" SONAR_LOGIN_TOKEN\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make temporary folder for seed analysis for javascript scanner")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /root/temp1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir src\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" touch src/test.js\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Init sonarscanner cache with plugins")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" sonar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("scanner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dsonar.host.url=$SONAR_HOST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dsonar.login=$SONAR_LOGIN_TOKEN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dsonar.analysis.mode=preview "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dsonar.projectKey="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pluginsSeedJS"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dsonar.sources="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /root\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove temporary folder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" rm /root/temp1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make temporary folder for seed analysis")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /root/temp2\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Init sonarscanner cache with plugins for .NET scanner")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet sonarscanner begin /k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pluginsSeedNET"')]),t._v(" /d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sonar.host.url=$SONAR_HOST /d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sonar.login=$SONAR_LOGIN_TOKEN /d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sonar.analysis.mode=preview\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet new sln "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name FooBar\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet new mvc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name Foo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("output Foo\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet new console "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name Bar "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("output Bar\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet sln add ./Foo/Foo.csproj\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet sln add ./Bar/Bar.csproj\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet restore\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet build FooBar.sln\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet sonarscanner end /d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sonar.login=$SONAR_LOGIN_TOKEN ; exit 0\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /root\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove temporary folder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" rm /root/temp2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf\n")])])]),a("p",[t._v("Ainda dentro da pasta que acabamos de criar executaremos o seguinte comando:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('docker build --network=host --tag sonar-scanner-image:latest --build-arg SONAR_HOST="http://localhost:9000" --build-arg SONAR_LOGIN_TOKEN="TOKEN_VALUE" .\n')])])]),a("p",[t._v('Lembre-se de substituir "TOKEN_VALUE" pelo seu token criado na etapa 4.')]),t._v(" "),a("p",[t._v("Pronto!")]),t._v(" "),a("h2",{attrs:{id:"executando-o-scanner-em-um-projeto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executando-o-scanner-em-um-projeto"}},[t._v("#")]),t._v(" Executando o Scanner em um projeto")]),t._v(" "),a("p",[t._v("Agora baixe o(s) projeto(s) que deve(m) passar pelo scanner nesta pasta.")]),t._v(" "),a("ol",[a("li",[t._v("Entre no diretório do projeto e crie o .dockerignore")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("touch .dockerignore\n")])])]),a("p",[t._v("Neste arquivo que acabamos de criar adicione o seguinte (e as demais pastas que deseje que o sonarquebe ignore durante o scanner):")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".dockerignore\n.vs\nnode_modules\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Crie um Dockerfile dentro do projeto a ser scanneado, e adicione o seguinte código:")])]),t._v(" "),a("blockquote",[a("p",[t._v("OBS: (caso ele já exista o substitua).")])]),t._v(" "),a("blockquote",[a("p",[t._v("SONAR_PROJECT_KEY = Nome do projeto Scanneado")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# It is our freshly build sonar-scanner-image from previous steps that\n# is used here as a base image in docker file that we will be working on\nFROM sonar-scanner-image:latest AS sonarqube_scan\n# Here we are setting up a working directory to /app. It is like using `cd app` command\nWORKDIR /app\n# Copying all files from the project directory to our current location (/app) in image\n# except patterns mention in .dockerignore\nCOPY . .\n# Execution of example command. Here it is used to show a list of files and directories.\n# It will be useful in later exercises in this tutorial.\nRUN ls -list\n# To execute sonar-scanner we just need to run "sonar-scanner" in the image.\n# To pass Sonarqube parameter we need to add "-D"prefix to each as in the example below\n# sonar.host.url is property used to define URL of Sonarqube server\n# sonar.projectKey is used to define project key that will be used to distinguish it in\n# sonarqube server from other projects\n# sonar.sources directory for sources of project\nRUN sonar-scanner \\\n    -Dsonar.host.url="http://localhost:9000" \\\n    -Dsonar.projectKey="SONAR_PROJECT_KEY" \\\n    -Dsonar.sources=. \\\n\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Agora, ainda dentro do diretório do projeto execute:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker build --network=host --no-cache .\n")])])]),a("p",[t._v("Após o termino do scanner. Ao entrar em "),a("a",{attrs:{href:"http://localhost:9000/projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9000/projects"),a("OutboundLink")],1),t._v(" você verá o seu projeto.")])])}),[],!1,null,null,null);s.default=n.exports}}]);